"use strict";(self.webpackChunknada=self.webpackChunknada||[]).push([[410],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return u}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),l=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),h=l(a),u=r,m=h["".concat(p,".").concat(u)]||h[u]||c[u]||i;return a?n.createElement(m,o(o({ref:t},d),{},{components:a})):n.createElement(m,o({ref:t},d))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=h;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=a[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},6962:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return d},default:function(){return h}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),o=["components"],s={title:"Airflow"},p=void 0,l={unversionedId:"process-data/onprem/airflow",id:"process-data/onprem/airflow",isDocsHomePage:!1,title:"Airflow",description:"Apache Airflow is a tool for orchestration, scheduling",source:"@site/docs/process-data/onprem/airflow.md",sourceDirName:"process-data/onprem",slug:"/process-data/onprem/airflow",permalink:"/nada/process-data/onprem/airflow",editUrl:"https://github.com/navikt/nada/edit/master/docs/process-data/onprem/airflow.md",tags:[],version:"current",frontMatter:{title:"Airflow"},sidebar:"docs",previous:{title:"Getting started",permalink:"/nada/process-data/onprem/getting-started"},next:{title:"Jupyterhub",permalink:"/nada/process-data/onprem/jupyterhub"}},d=[{value:"Configuration",id:"configuration",children:[{value:"namespace",id:"namespace",children:[]},{value:"ingress",id:"ingress",children:[]},{value:"users",id:"users",children:[]},{value:"dagsRepo",id:"dagsrepo",children:[]},{value:"dagsRepoBranch",id:"dagsrepobranch",children:[]},{value:"repoSyncTime",id:"reposynctime",children:[]},{value:"dvApiEndpoint",id:"dvapiendpoint",children:[]},{value:"dvBucketEndpoint",id:"dvbucketendpoint",children:[]}]},{value:"Examples of DAG repositories",id:"examples-of-dag-repositories",children:[]},{value:"Dataverk-Airflow",id:"dataverk-airflow",children:[]}],c={toc:d};function h(e){var t=e.components,s=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://airflow.apache.org/docs/apache-airflow/stable/index.html"},"Apache Airflow")," is a tool for orchestration, scheduling\nand monitoring of datapipelines. The web UI that comes with Airflow gives the user e.g. easy access to logs for the different\nsteps in pipelines, the option to trigger datapipelines manually, and statistics on previous runs."),(0,i.kt)("p",null,"A datapipeline in Airflow, or DAG (Directed Acyclic Graph), is a set of tasks (or steps) one wishes to execute and describes\nthe order and dependencies between these tasks. The DAGs are described programmatically in python files and put in a\nGithub repository which is synchronized with the Airflow instance periodically. Below is a graphical representation of the flow\nin one such DAG."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Pipeline flow in an Airflow DAG",src:a(2443).Z})),(0,i.kt)("p",null,"KNADA offers teams or individuals the option to set up airflow instances in their personal k8s namespaces in the KNADA cluster."),(0,i.kt)("p",null,"For more information on Airflow, see ",(0,i.kt)("a",{parentName:"p",href:"https://airflow.apache.org/docs/apache-airflow/stable/index.html"},"Airflow docs")),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"In order to set up Airflow one must create a pull request to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/navikt/knada-airflow"},"navikt/knada-airflow"),"\nwith a .yaml file with the following content in the catalog ",(0,i.kt)("em",{parentName:"p"},"configs"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"namespace: <namespace>\ningress: <ingress>\nusers:\n  - <Userident 1>\n  - <Userident 2>\n  - ...\ndagsRepo: <dagsRepo>\n")),(0,i.kt)("p",null,"With every new pull request to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/navikt/knada-airflow"},"navikt/knada-airflow")," (including changes to\nexisting ones) validation checks are performed on the files committed. When these checks passes the committer can\nmerge his or her own pull request themselves, ",(0,i.kt)("em",{parentName:"p"},"one does not have to wait for approval from the codeowners"),"."),(0,i.kt)("h3",{id:"namespace"},"namespace"),(0,i.kt)("p",null,"The name of the k8s namespace where the Airflow instance should be set up (usually the same as your Jupyterhub\nnamespace)."),(0,i.kt)("h3",{id:"ingress"},"ingress"),(0,i.kt)("p",null,"The value set in the ",(0,i.kt)("em",{parentName:"p"},"ingress")," field becomes the prefix for the address to the Airflow web UI,\ni.e. ",(0,i.kt)("a",{parentName:"p",href:"https://_prefix_-airflow.knada.adeo.no."},"https://_prefix_-airflow.knada.adeo.no.")," The users themselves decide what this prefix should be, but usually\nthe prefix has been set to the same value as the name of the k8s namespace."),(0,i.kt)("h3",{id:"users"},"users"),(0,i.kt)("p",null,"List of the users (NAV idents) which should have access to the Airflow web UI."),(0,i.kt)("h3",{id:"dagsrepo"},"dagsRepo"),(0,i.kt)("p",null,"Repository in the navikt organization on Github that contains Python files with DAGs for the Airflow instance."),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"The repository must exist")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The repository does not need to contain any DAG files when the Airflow instance is set up, but the repository ",(0,i.kt)("strong",{parentName:"p"},"must exist"),"\non Github prior to setting up the Airflow instance."))),(0,i.kt)("p",null,"Once every minute the DAGs in this repository will be synchronized with the Airflow instance."),(0,i.kt)("h3",{id:"dagsrepobranch"},"dagsRepoBranch"),(0,i.kt)("p",null,"Specifies the branch in the Gihub repository which the Airflow instance should pull."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"default:")," main"),(0,i.kt)("h3",{id:"reposynctime"},"repoSyncTime"),(0,i.kt)("p",null,"Specifies how often (in seconds) the Airflow instance should pull your Github repository."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"default:")," 60"),(0,i.kt)("h3",{id:"dvapiendpoint"},"dvApiEndpoint"),(0,i.kt)("p",null,"When publishing data packages ",(0,i.kt)("a",{parentName:"p",href:"/process-data/dataverk/README"},"dataverk")," uses this parameter to set the api address the data catalog\nuses to fetch the content for the data package viewer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NAV internal (default):")," ",(0,i.kt)("a",{parentName:"p",href:"https://data.intern.nav.no/api"},"https://data.intern.nav.no/api")," (",(0,i.kt)("a",{parentName:"p",href:"/find-data/data-catalog#internal-datacatalog-nav-only"},"internal data catalog"),")"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"External:")," ",(0,i.kt)("a",{parentName:"p",href:"https://data.nav.no/api"},"https://data.nav.no/api")," (",(0,i.kt)("a",{parentName:"p",href:"/find-data/data-catalog#public-datacatalog"},"external data catalog"),")"),(0,i.kt)("h3",{id:"dvbucketendpoint"},"dvBucketEndpoint"),(0,i.kt)("p",null,"When publishing data packages ",(0,i.kt)("a",{parentName:"p",href:"/process-data/dataverk/README"},"dataverk")," uses this parameter to determine which data catalog the\ndata package content (resource files and visualizations) should be published to."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NAV internal (default):")," ",(0,i.kt)("a",{parentName:"p",href:"https://dv-api-intern.prod-gcp.nais.io/storage"},"https://dv-api-intern.prod-gcp.nais.io/storage")," (",(0,i.kt)("a",{parentName:"p",href:"/find-data/data-catalog#internal-datacatalog-nav-only"},"internal data catalog"),")"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"External:")," ",(0,i.kt)("a",{parentName:"p",href:"https://dv-api-ekstern.prod-gcp.nais.io/storage"},"https://dv-api-ekstern.prod-gcp.nais.io/storage")," (",(0,i.kt)("a",{parentName:"p",href:"/find-data/data-catalog#public-datacatalog"},"external data catalog"),")"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"external data catalog")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"When not specifying ",(0,i.kt)("inlineCode",{parentName:"p"},"dvApiEndpoint")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"dvBucketEndpoint")," the data packages are by default published to the",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("a",{parentName:"p",href:"/find-data/data-catalog/#internal-datakatalog-nav-only"},"internal data catalog"),". Do not override these parameters unless you\nwant to publish data packages to the ",(0,i.kt)("a",{parentName:"p",href:"/find-data/data-catalog/#public-datacatalog"},"external data catalog"),"."))),(0,i.kt)("h2",{id:"examples-of-dag-repositories"},"Examples of DAG repositories"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/navikt/nada-dags"},"nada-dags")," contains examples on how to use different operators in Airflow."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/navikt/opendata-dags"},"opendata-dags")," contains the DAGs used for creating data packages.")),(0,i.kt)("h2",{id:"dataverk-airflow"},"Dataverk-Airflow"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/navikt/dataverk-airflow"},"Dataverk-Airflow")," is a library aimed at making it easier to use\n",(0,i.kt)("a",{parentName:"p",href:"https://airflow.apache.org/docs/apache-airflow/stable/kubernetes.html"},"KubernetesPodOperator")," in the KNADA cluster."),(0,i.kt)("p",null,"The library contains wrapper functions for running Jupyter notebooks, Python scripts, BigQuery commands and DBT\ntransformations in separate k8s pods in the cluster. View\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/navikt/dataverk-airflow/blob/master/README.md"},"README")," in the repository for examples."))}h.isMDXComponent=!0},2443:function(e,t,a){t.Z=a.p+"assets/images/dag-eksempel-ffe2b3c0ef8bdc07bda16dfc3db6d28e.png"}}]);