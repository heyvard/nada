"use strict";(self.webpackChunknada=self.webpackChunknada||[]).push([[624],{3905:function(a,e,t){t.d(e,{Zo:function(){return p},kt:function(){return h}});var n=t(7294);function i(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function o(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function r(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){i(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function s(a,e){if(null==a)return{};var t,n,i=function(a,e){if(null==a)return{};var t,n,i={},o=Object.keys(a);for(n=0;n<o.length;n++)t=o[n],e.indexOf(t)>=0||(i[t]=a[t]);return i}(a,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(a);for(n=0;n<o.length;n++)t=o[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(i[t]=a[t])}return i}var l=n.createContext({}),d=function(a){var e=n.useContext(l),t=e;return a&&(t="function"==typeof a?a(e):r(r({},e),a)),t},p=function(a){var e=d(a.components);return n.createElement(l.Provider,{value:e},a.children)},c={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(a,e){var t=a.components,i=a.mdxType,o=a.originalType,l=a.parentName,p=s(a,["components","mdxType","originalType","parentName"]),u=d(t),h=i,g=u["".concat(l,".").concat(h)]||u[h]||c[h]||o;return t?n.createElement(g,r(r({ref:e},p),{},{components:t})):n.createElement(g,r({ref:e},p))}));function h(a,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof a||i){var o=t.length,r=new Array(o);r[0]=u;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=a,s.mdxType="string"==typeof a?a:i,r[1]=s;for(var d=2;d<o;d++)r[d]=t[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9551:function(a,e,t){t.r(e),t.d(e,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return p},default:function(){return u}});var n=t(7462),i=t(3366),o=(t(7294),t(3905)),r=["components"],s={title:"Data packages"},l=void 0,d={unversionedId:"share-insight/data-packages",id:"share-insight/data-packages",isDocsHomePage:!1,title:"Data packages",description:"Why data packages?",source:"@site/docs/share-insight/data-packages.md",sourceDirName:"share-insight",slug:"/share-insight/data-packages",permalink:"/nada/share-insight/data-packages",editUrl:"https://github.com/navikt/nada/edit/master/docs/share-insight/data-packages.md",tags:[],version:"current",frontMatter:{title:"Data packages"},sidebar:"docs",previous:{title:"Register data products",permalink:"/nada/share-data/register"},next:{title:"Publish data packages",permalink:"/nada/share-insight/publish-data-packages"}},p=[{value:"Why data packages?",id:"why-data-packages",children:[]},{value:"Creating data packages with notebooks",id:"creating-data-packages-with-notebooks",children:[{value:"Define metadata",id:"define-metadata",children:[]},{value:"Add content to the story",id:"add-content-to-the-story",children:[]},{value:"Publish to NAV datacatalog",id:"publish-to-nav-datacatalog",children:[]}]},{value:"Publishing data packages without using notebooks",id:"publishing-data-packages-without-using-notebooks",children:[{value:"Publishing a data package via API",id:"publishing-a-data-package-via-api",children:[]},{value:"Create a new data package",id:"create-a-new-data-package",children:[]},{value:"Adding a view and ressourcefiles",id:"adding-a-view-and-ressourcefiles",children:[]},{value:"Updating a data package",id:"updating-a-data-package",children:[]},{value:"Example datapackage.json which includes a data visualization",id:"example-datapackagejson-which-includes-a-data-visualization",children:[]}]},{value:"Example datapackage.json including references to a data file and a plotly figure",id:"example-datapackagejson-including-references-to-a-data-file-and-a-plotly-figure",children:[{value:"Publishing to data.nav.no",id:"publishing-to-datanavno",children:[]}]}],c={toc:p};function u(a){var e=a.components,t=(0,i.Z)(a,r);return(0,o.kt)("wrapper",(0,n.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"why-data-packages"},"Why data packages?"),(0,o.kt)("p",null,"With data packages you can create and publish datastories directly from notebooks or scripts. You can combine data visualizations with formatted text, tables, images, html and PDFs to create your datastory. The easiest way to create data packages is using notebooks. See ",(0,o.kt)("a",{href:"https://deetly.github.io/docs/intro.html"},"deetly")," for examples and getting started documentation."),(0,o.kt)("h2",{id:"creating-data-packages-with-notebooks"},"Creating data packages with notebooks"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import deetly\nfrom dataverk import Client\n")),(0,o.kt)("h3",{id:"define-metadata"},"Define metadata"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# Create the data story\nmetadata = {\n    "name":"Hello world"\n}\nds = deetly.story(metadata)\n')),(0,o.kt)("h3",{id:"add-content-to-the-story"},"Add content to the story"),(0,o.kt)("p",null,"Content can be text as shown in this example. But content can also be markdown, data visualizations or dashbards. More examples can be found on ",(0,o.kt)("a",{href:"https://deetly.github.io/docs/intro.html"},"deetly"),". You can add multiple content items to a story."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# Add a text section to the story\nds.text("Glad you are here!")\n')),(0,o.kt)("h3",{id:"publish-to-nav-datacatalog"},"Publish to NAV datacatalog"),(0,o.kt)("p",null,"With naisdevice installed and running you can publish to the internal datakatalog directly from your desktop. In this case you need to define some environment variables to publish to either test (",(0,o.kt)("a",{href:"https://data.dev.intern.nav.no"},(0,o.kt)("a",{parentName:"p",href:"https://data.dev.intern.nav.no"},"https://data.dev.intern.nav.no")),") or prod (",(0,o.kt)("a",{href:"https://data.intern.nav.no"},(0,o.kt)("a",{parentName:"p",href:"https://data.intern.nav.no"},"https://data.intern.nav.no")),"). "),(0,o.kt)("p",null,"When working in jupyter.adeo.no these are not necessary.   "),(0,o.kt)("h4",{id:"for-dataverk-047"},"For dataverk >=0.4.7"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import os\n# publish to test: https://data.dev.intern.nav.no\nos.environ['DATAVERK_HOST'] = 'https://datakatalog-api.dev.intern.nav.no'\n\n# publish to prod: https://data.intern.nav.no\n#os.environ['DATAVERK_HOST'] = 'https://datakatalog-api.intern.nav.no'\n\n# publish from onprem\nos.environ['DATAVERK_ENVIRONMENT'] = 'nais'\n")),(0,o.kt)("h4",{id:"for-dataverk-047-1"},"For dataverk <0.4.7"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import os\n# publish to test: https://data.dev.intern.nav.no\nos.environ['DATAVERK_ES_HOST'] = 'https://datakatalog-api.dev.intern.nav.no/v1/index'\nos.environ['DATAVERK_BUCKET_ENDPOINT'] = 'https://dv-api-intern.dev-gcp.nais.io/storage'\nos.environ['DATAVERK_API_ENDPOINT'] = 'https://data.dev.intern.nav.no/api'\n\n# publish to prod: https://data.intern.nav.no\n#os.environ['DATAVERK_ES_HOST'] = 'https://datakatalog-api.intern.nav.no/v1/index'\n#os.environ['DATAVERK_BUCKET_ENDPOINT'] = 'https://dv-api-intern.prod-gcp.nais.io/storage'\n#os.environ['DATAVERK_API_ENDPOINT'] ='https://data.intern.nav.no/api'\n\n# publish from onprem\nos.environ['DATAVERK_BUCKET'] ='nav-interndata'\nos.environ['DATAVERK_STORAGE_SINK'] = 'nais'\n")),(0,o.kt)("p",null,"All is now set. After you call the publish() method your story will immediately be be available in the datacatalog."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"Client().publish(ds)\n")),(0,o.kt)("h2",{id:"publishing-data-packages-without-using-notebooks"},"Publishing data packages without using notebooks"),(0,o.kt)("p",null,"It is also possible to publish data stories using other languages than Python and without using notebooks."),(0,o.kt)("p",null,"A data package is just a declarative specification in JSON format. The package can also contain data and/or references to data sources."),(0,o.kt)("p",null,"The data package JSON object contains:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"metadata"),(0,o.kt)("li",{parentName:"ul"},"a list of 0-n data 'resources'"),(0,o.kt)("li",{parentName:"ul"},"a list of 0-n content item declarations (='views')")),(0,o.kt)("p",null,"Basic example contain only one view of type markdown and noe data  resources:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "Hello world", \n    "issued": "2021-03-03T19:23:34.160098", \n    "modified": "2021-03-03T19:23:34.160098", \n    "title": "Hello world", \n    "id": "aae98ae8214549d11861eb9fd7234ba5", \n    "views": [\n        {\n            "name": "Hello World",\n            "description": "", \n            "specType": "markdown", \n            "spec": {"markdown": "Hello World"}\n        }\n    ]\n}\n')),(0,o.kt)("h3",{id:"publishing-a-data-package-via-api"},"Publishing a data package via API"),(0,o.kt)("p",null,"When publishing a data package the JSON declaration along with eventual resource file are written to files in bucket store via and API. The files can then be accessed by a 'data package viewer' front-end application."),(0,o.kt)("p",null,"The following example shows how to publish a data package JSON file to the dev environment (",(0,o.kt)("a",{parentName:"p",href:"https://data.dev.intern.nav.no"},"https://data.dev.intern.nav.no"),")"),(0,o.kt)("p",null,"To publish to prod you would have used the API address: ",(0,o.kt)("a",{parentName:"p",href:"https://datakatalog-api.intern.nav.no"},"https://datakatalog-api.intern.nav.no"),"."),(0,o.kt)("h3",{id:"create-a-new-data-package"},"Create a new data package"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"curl -X 'POST' -H \"Content-Type: application/json\" -d @datapakke.json 'https://datakatalog-api.dev.intern.nav.no/v1/datapackage'\n")),(0,o.kt)("p",null,"If all goes well you wil get a respons containing the id of your data package:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "id": "1c9c6c7c40812e207946632dcc4be58f",\n  "status": "Successfully created datapackage min datapakke"\n}\n')),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Take note of the ID. You will need this if you would like to update the data package"))),(0,o.kt)("h3",{id:"adding-a-view-and-ressourcefiles"},"Adding a view and ressourcefiles"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"curl -X PUT -F files=@resource.csv -F files=@testfigur.json https://datakatalog-api.dev.intern.nav.no/v1/datapackage/1c9c6c7c40812e207946632dcc4be58f/attachments\n")),(0,o.kt)("h3",{id:"updating-a-data-package"},"Updating a data package"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"curl -X 'PUT' -H \"Content-Type: application/json\" -d @datapakke.json 'https://datakatalog-api.dev.intern.nav.no/v1/datapackage/1c9c6c7c40812e207946632dcc4be58f'\n")),(0,o.kt)("h3",{id:"example-datapackagejson-which-includes-a-data-visualization"},"Example datapackage.json which includes a data visualization"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "Echarts demo datapakke",\n  "description": "Echarts demo datapakke",\n  "views": [\n    {\n      "title": "Echart demofigur",\n      "description": "Dette er en testfigur",\n      "specType": "echart",\n      "spec": { \n          "option": \n            {\n                "xAxis": {\n                    "type": "category",\n                    "data": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]\n                },\n                "yAxis": {\n                    "type": "value"\n                },\n                "series": [{\n                    "data": [150, 230, 224, 218, 135, 147, 260],\n                    "type": "line"\n                }]\n            }\n        }\n    }\n  ]\n}\n')),(0,o.kt)("h2",{id:"example-datapackagejson-including-references-to-a-data-file-and-a-plotly-figure"},"Example datapackage.json including references to a data file and a plotly figure"),(0,o.kt)("p",null,"When including figures which contain large amounts of data you can reduce the load time of the data package by storing the figures (spec) as separate files and including just the url's in the data package.json. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "Plotly demo datapakke",\n  "description": "Datapakke med et plotly view og en nedlastbar fil",\n  "views": [\n    {\n      "title": "Testfigur",\n      "description": "Dette er en testfigur",\n      "specType": "plotly",\n      "spec": {\n        "url": "testfigur.json"\n      }\n    }\n  ],\n  "resources": [\n    {\n      "name": "resource",\n      "description": "dette er en testressurs",\n      "path": "resource.csv",\n      "format": "csv",\n      "dsv_separator": ";"\n    }\n  ]\n}\n')),(0,o.kt)("h3",{id:"publishing-to-datanavno"},"Publishing to data.nav.no"),(0,o.kt)("p",null,"If the data package is to be published to the public data catalog you must provide metadata following the DCAT-AP-NO standard. Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'metadata = {\n    "name":"Hello unique world", \n    "title": "Hello world", \n    "description": "Friendly greeting",\n    "keywords": ["greeting"],\n    "scope": "team hello",\n    "author": "team hello",\n    "publisher": {"name": "team hello", "email": "hello@world" },\n    "license": {"name": "MIT", "email": "https://opensource.org/licenses/MIT"},\n    "contactPoint": {"name": "team hello", "email": "hello@world" },\n    "temporal": {"from": "2000-01-01", "to": "2030-01-01"},\n    "spatial": "Norge"\n    }\n')),(0,o.kt)("p",null,"A full description of required and optional metadata fields is available at ",(0,o.kt)("a",{parentName:"p",href:"/nada/process-data/dataverk/metadata"},"metadata")),(0,o.kt)("p",null,"If you get stuck or need more info please contact #knada on Slack"))}u.isMDXComponent=!0}}]);