"use strict";(self.webpackChunknada=self.webpackChunknada||[]).push([[978],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?o.createElement(f,a(a({ref:t},u),{},{components:n})):o.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7776:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var o=n(7462),r=n(3366),i=(n(7294),n(3905)),a=["components"],l={title:"Cloud Function"},s=void 0,c={unversionedId:"process-data/gcp/pipelines/cloud-functions",id:"process-data/gcp/pipelines/cloud-functions",isDocsHomePage:!1,title:"Cloud Function",description:"Cloud Functions is a lightweight compute solution for developers to create single-purpose, stand-alone functions that respond to Cloud events without the need to manage a server or runtime environment. Learn more",source:"@site/docs/process-data/gcp/pipelines/cloud-functions.md",sourceDirName:"process-data/gcp/pipelines",slug:"/process-data/gcp/pipelines/cloud-functions",permalink:"/nada/process-data/gcp/pipelines/cloud-functions",editUrl:"https://github.com/navikt/nada/edit/master/docs/process-data/gcp/pipelines/cloud-functions.md",tags:[],version:"current",frontMatter:{title:"Cloud Function"},sidebar:"docs",previous:{title:"Cloud Composer",permalink:"/nada/process-data/gcp/pipelines/cloud-composer"},next:{title:"Cloud Scheduler",permalink:"/nada/process-data/gcp/pipelines/cloud-scheduler"}},u=[{value:"Example",id:"example",children:[{value:"Create a Cloud Function",id:"create-a-cloud-function",children:[]},{value:"Test the function",id:"test-the-function",children:[]}]},{value:"Schedule with Cloud Scheduler",id:"schedule-with-cloud-scheduler",children:[]}],d={toc:u};function p(e){var t=e.components,l=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("a",{parentName:"p",href:"https://developers.google.com/learn/topics/functions"},"Cloud Functions")," is a lightweight compute solution for developers to create single-purpose, stand-alone functions that respond to Cloud events without the need to manage a server or runtime environment. Learn more")),(0,i.kt)("p",null,"You can find the official documentation for Cloud Functions at ",(0,i.kt)("a",{parentName:"p",href:"https://cloud.google.com/functions/docs"},"cloud.google.com"),". "),(0,i.kt)("p",null,"For convenience, we have created a simple example on how to read a source and write to ","[BigQuery]"," (",(0,i.kt)("a",{parentName:"p",href:"https://cloud.google.com/bigquery/docs"},"https://cloud.google.com/bigquery/docs"),") using Cloud Functions"),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"In this guide we read STYRK codes (Classification of occupations) from Statistics Norway (SSB) and create a table in BigQuery with all the codes. "),(0,i.kt)("h3",{id:"create-a-cloud-function"},"Create a Cloud Function"),(0,i.kt)("p",null,"In order to set up a Cloud Function in the Google Cloud Platform console, go to ",(0,i.kt)("a",{parentName:"p",href:"https://console.cloud.google.com/functions/"},"Cloud Functions")," and press ",(0,i.kt)("inlineCode",{parentName:"p"},"CREATE FUNCTION"),"."),(0,i.kt)("p",null,"The following must be specified:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"Function name")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"Region")," - Europe is required"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"Trigger type")," - set to ",(0,i.kt)("inlineCode",{parentName:"li"},"HTTP")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"Authentication")," - set to ",(0,i.kt)("inlineCode",{parentName:"li"},"Require Authentication")),(0,i.kt)("li",{parentName:"ol"},"Enable ",(0,i.kt)("inlineCode",{parentName:"li"},"Require HTTPS"))),(0,i.kt)("p",null,"Cloud Functions have a standard ",(0,i.kt)("em",{parentName:"p"},"timeout")," set to one minute and memory limit set to 256 MB. This can be edited under",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"VARIABLES, NETWORKING AND ADVANCED SETTINGS"),". Maximum limits are nine minutes and 4 GiB."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Before advancing to the next step you should note the trigger URL which is shown under ",(0,i.kt)("inlineCode",{parentName:"p"},"Trigger"),".  "))),(0,i.kt)("p",null,"Finally press ",(0,i.kt)("inlineCode",{parentName:"p"},"SAVE")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"NEXT"),"."),(0,i.kt)("p",null,"In the next step you must specify the environment, in our example we use Python 3.8."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'def write_styrk_to_bq(request):\n    import requests\n    import json\n    from google.cloud import bigquery\n    from google.cloud import storage\n\n    # Fetch STYRK codes from external API\n    res = requests.get("https://data.ssb.no/api/klass/v1/versions/33")\n    res.raise_for_status()\n    styrk_koder = res.json()["classificationItems"]\n\n    # Must convert dict to newline delimited json format before loading\n    styrk_newline_delimited_json = ""\n    for styrk_kode in styrk_koder:\n        styrk_newline_delimited_json += json.dumps(styrk_kode) + "\\n"\n\n    # Write STYRK codes to gcs bucket nada-analyse\n    client = storage.Client()\n    bucket = client.get_bucket("nada-analyse")\n    blob = bucket.blob("arbeid/styrk.json")\n    blob.upload_from_string(styrk_newline_delimited_json)\n\n    # Create/overwrite table arbeid.styrk in bigquery with data from the arbeid/styrk.json blob in nada-analyse bucket\n    bq_client = bigquery.Client()\n    dataset_ref = bq_client.dataset("arbeid")\n    table_ref = dataset_ref.table("styrk")\n    job_config = bigquery.LoadJobConfig(\n        schema=[\n            bigquery.SchemaField("code", "STRING"),\n            bigquery.SchemaField("parentCode", "STRING"),\n            bigquery.SchemaField("level", "STRING"),\n            bigquery.SchemaField("name", "STRING"),\n            bigquery.SchemaField("shortName", "STRING"),\n            bigquery.SchemaField("notes", "STRING"),\n        ],\n        write_disposition=bigquery.WriteDisposition.WRITE_TRUNCATE,\n        source_format=bigquery.SourceFormat.NEWLINE_DELIMITED_JSON,\n    )\n\n    load_job = bq_client.load_table_from_uri("gs://nada-analyse/arbeid/styrk.json", table_ref, job_config=job_config)\n    load_job.result()\n\n    return "Great success!"\n')),(0,i.kt)("p",null,"requirements.txt:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"requests==2.23.0\ngoogle-cloud-bigquery==2.1.0\ngoogle-cloud-storage==1.32.0\n")),(0,i.kt)("p",null,"Press ",(0,i.kt)("inlineCode",{parentName:"p"},"deploy"),"."),(0,i.kt)("h3",{id:"test-the-function"},"Test the function"),(0,i.kt)("p",null,"You can test your Cloud Function by expanding the action drop down menu and choosing ",(0,i.kt)("inlineCode",{parentName:"p"},"Test Function")," as shown below."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Test yout fnnction with Test Function",src:n(2145).Z})),(0,i.kt)("h2",{id:"schedule-with-cloud-scheduler"},"Schedule with Cloud Scheduler"),(0,i.kt)("p",null,"If you want your Cloud Function to be triggered periodically, see ",(0,i.kt)("a",{parentName:"p",href:"cloud-scheduler"},"Cloud Scheduler"),"."))}p.isMDXComponent=!0},2145:function(e,t,n){t.Z=n.p+"assets/images/qs-python-test-function-6e5f66a96360b57545f252a62890b619.png"}}]);